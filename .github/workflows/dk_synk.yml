name: Snyk Docker Image Scan

on:
  #pull_request:
  #  branches: [ "main" ]
  #  paths:
  #      - '*.py'
  #      - '**/*.py'
  workflow_dispatch:

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job is automatically triggered by a ${{ github.event_name }} event."
      
  docker-image-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Install Snyk CLI
      run: npm install -g snyk

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Fetch all tags to get the latest
      id: get_latest_tag
      run: |
        git fetch --tags
        echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> "$GITHUB_OUTPUT"
        echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)"
          
    - name: Display latest tag
      run: echo "The latest tag is ${{ steps.get_latest_tag.outputs.LATEST_TAG }}"

    - name: Run Snyk Docker Image Scan And Check Snyk Scan Results
      id: scan-docker-image
      env:
        ECR_REPO_NAME: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_NAME: ${{ vars.NONPROD_IMAGE_NAME }}
        SYNK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk container test ${{ env.ECR_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.get_latest_tag.outputs.LATEST_TAG }} -file=dockerfile --severity-threshold=high 
        echo "REG_IMAGE_NAME=${{ env.ECR_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.get_latest_tag.outputs.LATEST_TAG }}.${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: Display Image Name
      run: echo "The built image name is ${{ steps.scan-docker-image.outputs.REG_IMAGE_NAME }}"
