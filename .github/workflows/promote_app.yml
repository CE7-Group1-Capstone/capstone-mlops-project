# To promote the latest app image tested in nonprod env 
# to the prod env in the common registry

name: Promote Tested App Image

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job is automatically triggered by a ${{ github.event_name }} event."
      
  Nonprod-to-Prod-Promotion:
    name: Promote Docker App Image
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull and Push latest app image from nonprod to prod
        id: pull-push-image
        env:
          SRC_ECR_REG: ${{ steps.login-ecr.outputs.registry }}
          SRC_ECR_REPO: ${{ vars.NONPROD_IMAGE_NAME }}
          DST_ECR_REG: ${{ steps.login-ecr.outputs.registry }}
          DST_ECR_REPO: ${{ vars.PROD_IMAGE_NAME }}
        run: |
          docker pull ${{ env.SRC_ECR_REG }}/${{ env.SRC_ECR_REPO }}:latest
          docker tag ${{ env.SRC_ECR_REG }}/${{ env.SRC_ECR_REPO }}:latest ${{ env.DST_ECR_REG }}/${{ env.DST_ECR_REPO }}:latest
          docker push ${{ env.DST_ECR_REG }}/${{ env.DST_ECR_REPO }}:latest
          echo "REG_IMAGE_NAME=${{ env.DST_ECR_REG }}/${{ env.DST_ECR_REPO }}:latest" >> $GITHUB_OUTPUT         

      - name: Display Image Name
        run: echo "The built image name is ${{ steps.pull-push-image.outputs.REG_IMAGE_NAME }}"
