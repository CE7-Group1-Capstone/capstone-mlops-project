# This workflow will build and push a new container image to Amazon ECR:
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.

name: Build and push to Amazon ECR

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Tag for the Container image"
        required: true
        default: "latest"

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: predict-buy-app
  CONTAINER_NAME: predict-buy-app

jobs:
  deploy:
    name: Register Container Image
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # IMAGE_TAG: ${{ github.sha }} -> hash value of the commit if workflow trigger is non workflow dispatch
          IMAGE_TAG: ${{ github.event.inputs.image_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY -a
          echo "IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Display Image Name
        run: echo "The built image name is $IMAGE_NAME"
