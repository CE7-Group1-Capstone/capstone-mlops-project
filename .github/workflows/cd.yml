name: 'Build & Deploy to EKS'
on:
    # pull_request:
    #     branches: ["main"]
    workflow_dispatch:
        inputs:
            confirm:
                description: "Deploy application to EKS cluster? (y/n)"
                required: true
                default: 'n'
                type: choice
                options:
                    - 'y'
                    - 'n'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_CLUSTER: ${{ vars.EKS_CLUSTER }}
  EKS_REGION: ${{ vars.EKS_REGION }}
  
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    steps:
      # - name: Download Artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #       name: AWS_ECR_TAG
      #       path: AWS_ECR_TAG.txt
      
      
        
      - uses: actions/checkout@v4

      - name: use non-prod values
        if: github.ref == 'refs/heads/develop'
        run: |
            EKS_NAMESPACE=$("dev")
            IMAGE_TAG=$("${{ env.VER_TAG }}.${{ github.run_number }}:latest")
            AWS_ECR_REG=$("255945442255.dkr.ecr.us-east-1.amazonaws.com/${{ vars.NONPROD_IMAGE_NAME }}")
            AWS_ECR_TAG=$("255945442255.dkr.ecr.us-east-1.amazonaws.com/${{ vars.NONPROD_IMAGE_NAME }}:latest")
            
      - name: use prod values
        if: github.ref == 'refs/heads/main'
        run: |
            EKS_NAMESPACE=$("prod")
            IMAGE_TAG=$("${{ env.VER_TAG }}.${{ github.run_number }}:latest")
            AWS_ECR_REG=$("255945442255.dkr.ecr.us-east-1.amazonaws.com/${{ vars.PROD_IMAGE_NAME }}")
            AWS_ECR_TAG=$("255945442255.dkr.ecr.us-east-1.amazonaws.com/'${{ vars.PROD_IMAGE_NAME }}:latest")

      - name: Replace skaffold.yml and flask deployment.yaml
        # replace ECR path and namespace - skaffold require tag and repo uri to be separate
        # but k8s deployment requires both repo uri and tag to be together 
        # AWS_ECR_TAG=$('255945442255.dkr.ecr.us-east-1.amazonaws.com/'${{ vars.NONPROD_IMAGE_NAME }}:${{ env.VER_TAG }}.${{ github.run_number }}\

        run: |
          echo "$EKS_NAMESPACE"
          echo "$IMAGE_TAG"
          echo "$AWS_ECR_REG"
          echo "$AWS_ECR_TAG"
          sed -i "s/<PUBLIC_ECR_AWS>/$AWS_ECR_TAG/g" ./.k8s/flask-deployment-template.yml
          sed -i "s/<PUBLIC_ECR_AWS>/$AWS_ECR_REG/g" ./skaffold.yaml
          sed -i "s/<IMAGE_TAG>/latest/g" ./skaffold.yaml
          echo "EKS_NAMESPACE=$EKS_NAMESPACE" >> $GITHUB_ENV
          sed -i "s/<EKS_NAMESPACE>/$EKS_NAMESPACE/g" ./.k8s/flask-deployment-template.yml

          cat ./skaffold.yaml
          cat ./.k8s/flask-deployment-template.yml
      
      - uses: actions/setup-python@v5
        with:
         python-version: '3.12'
         cache: 'pip'
      - run: pip install -r ./requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
            # parameters of configure aws credentials
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: us-east-1
            
      
      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256) kubectl" | sha256sum --check


          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
      # Install Skaffold
      - name: Install Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \
          sudo install skaffold /usr/local/bin/
          skaffold version
      # Cache skaffold image builds & config
      - name: Cache skaffold image builds & config
        uses: actions/cache@v2
        with:
          path: ~/.skaffold/
          key: fixed-${{ github.sha }}
      # Check AWS version and configure profile
      - name: Check AWS version
        run: |
          aws --version
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $EKS_REGION
          aws sts get-caller-identity
      # Connect to EKS cluster
      - name: Connect to EKS cluster 
        run: aws eks --region $EKS_REGION update-kubeconfig --name $EKS_CLUSTER
      # Build and deploy to EKS cluster - exclude the ingress service
      - name: Build and then deploy to EKS cluster with Skaffold
        run: skaffold run
      # Replace the hostname of ingress service with load balancer address
      # - name: Replace the hostname of ingress service with load balancer address
      #   run: |
      #       LB_HOST=$(kubectl get svc nginx-ingress-ingress-nginx-controller -n kube-system -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
      #       sed -i 's/<ENDPOINT>/$LB_HOST' ./.k8s/ngix-ingress-template.yaml > ./.k8s/ngix-ingress.yaml
      #       kubectl apply -f ./.k8s/ngix-ingress.yaml
      

      # Verify deployment
      - name: Verify the deployment
        run: kubectl get pods
